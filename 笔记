一.  package.json文件新增babel-runtime,fastclick,babel-polyfill
      1：babel-runtime 安装："babel-runtime": "^6.0.0" | 对es6语法做转义
      2：fastclick 安装："fastclick": "^1.0.6" | 解决移动端300m 延迟问题
      3：babel-polyfill 安装："babel-polyfill": "^6.2.0" | 对 es6 api 打补丁

二、  更改build目录下的文件一定要重启服务： 比如：webpack.base.conf 里的，更改配置重启服务
      alias: {
            '@': resolve('src'),
            'components': resolve('src/components'),
          }


三、  需要安装各个loader依赖，否则会导致找不到依赖报错
      1.cnpm install stylus-loader css-loader style-loader --save-dev （不是很管用）
      2.cnpm install stylus stylus-loader css-loader style-loader --save-dev （下次测试一下）
      3. npm install stylus  --save-dev
         npm install stylus-loader  --save-dev
         (此方方法一定没问题)

四、  推荐中的 热门歌单请求QQ音乐接口时候遇到大坑，因为vuecli 已经更新版本， build中无dev-serverjs 文件
      解决方法：见build 中 webpack.dev.conf.js  nodejs代理跨域配置

五、  solt插槽， vue-better-scroll 初始化
      见：scroll组件中 better-scroll 初始化参数
      data：{
            type: Array, // 通过 props 传入父组件中要滚动的列表数据
            default: null
          }
      wacth: {  // 监听父组件中滚动列表实时更新数据的变化，防止出错
        data() {
          setTimeout(() => {
            this.refresh() // 强制计算刷新作用
          }, this.refreshDelay)
        }
      }


六、  VueLazyload 图片懒加载
      先package.json中写入，然后npm install 安装
      在main.js中引入
      import VueLazyload from 'vue-lazyload'
      需要 use 注册
      Vue.use(VueLazyload, {
        loading: require('common/image/default.png')
      })
      最后在 组件中使用<img width="60" height="60" v-lazy="item.imgurl">


七、  组件名称定义
      例如： singer.vue 引入 list-view 组件
      <template>
        <div class="singer">
          <list-view :data="singers" ref="list"></list-view>
        </div>
      </template>
      <script type="text/ecmascript-6">
        import ListView from 'base/listview/listview'
        因为 ListView 是驼峰命名大写字母开头 ，所以组件中 要以 "-"  list-view 分割
        如果 Listview 是小写， 组件中就可以用 <listview></listview> 了
      <script>


八、  父子组件值传递，如果子组件中props 接收的是数组 type: Array   default: ?
      此时 default 要写成箭头函数 ，不能直接写为 []
      如： props: {
               data: {
                 type: Array,
                 default: () => []
               }
             },

九、  <router-link tag="div" class="tab-item" to="/recommend">
      tag="div" 表示把dom元素渲染成 div （可以换成其他dom元素）

十、  利用webpack对代码进行分割是懒加载的前提，懒加载就是异步调用组件，需要时候才下载。（属于优化）
      方法1： 引入方式
      const Recommend = (resolve) => {
        import('components/recommend/recommend').then((module) => {
          resolve(module)
        })
      }
      routes：[]这里正常写

      方法2： 引入方式
      const first = r => require.ensure([], () => r(require('components/recommend／recommend')), 'recommend')
      routes：[]这里正常写

      方法3： 正常引入 improt xxx from xxx

十一、 一个类必须有constructor()方法，如果没有显式定义，一个空的constructor()方法会被默认添加。（列如：common 下的js里定义的）
      function Point(x, y) {
        this.x = x;
        this.y = y;
      }

      Point.prototype.toString = function () {
        return '(' + this.x + ', ' + this.y + ')';
      };
      ~~~~~~~~~~~~~等同于~~~~~~~~~~~~~
      class Point {
        constructor(x, y) {
          this.x = x;
          this.y = y;
        }

        toString() {
          return '(' + this.x + ', ' + this.y + ')';
        }
      }
十二、 vue  dom手动挂载方法，main.js中， 在最后可以 使用$.mount("app") 进行挂载， es6写法就用 render：h => h(App)
      new Vue({
      //el: '#app',
      router,
      render: h => h(App)
      // render: x => x(App)
      // 这里的render: x => x(App)是es6的写法
      // 转换过来就是：  暂且可理解为是渲染App组件
      // render:(function(x){
      //  return x(App);
      // });
      }).$mount("#app");
